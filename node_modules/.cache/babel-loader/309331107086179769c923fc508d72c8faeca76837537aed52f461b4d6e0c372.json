{"ast":null,"code":"import _classCallCheck from\"C:/Users/\\u041C\\u0430\\u0440\\u0438\\u044F/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/\\u041C\\u0430\\u0440\\u0438\\u044F/Desktop/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._options=options;}_createClass(Api,[{key:\"_getResponseData\",value:function _getResponseData(res){if(!res.ok){return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}return res.json();}//Метод для информации о пользователе:\n},{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;return fetch(this._options.baseUrl+\"/users/me\",{headers:this._options.headers}).then(function(res){return _this._getResponseData(res);});}//Метод для подключения к массиву карточек:\n},{key:\"getInitialCards\",value:function getInitialCards(){var _this2=this;return fetch(this._options.baseUrl+\"/cards\",{headers:this._options.headers}).then(function(res){return _this2._getResponseData(res);});}// Метод для сохранения данных о пользователе:\n},{key:\"setEditUserInfo\",value:function setEditUserInfo(data){var _this3=this;return fetch(this._options.baseUrl+\"/users/me\",{method:\"PATCH\",headers:this._options.headers,body:JSON.stringify({name:data.nameInput,about:data.jobInput})}).then(function(res){return _this3._getResponseData(res);});}// Метод для добавления новой карточки на сервер:\n},{key:\"setNewCard\",value:function setNewCard(data){var _this4=this;return fetch(this._options.baseUrl+\"/cards\",{method:\"POST\",headers:this._options.headers,body:JSON.stringify({name:data.name,link:data.link})}).then(function(res){return _this4._getResponseData(res);});}//Метод для постановки лайков:\n},{key:\"addLike\",value:function addLike(cardId){var _this5=this;return fetch(this._options.baseUrl+\"/cards/\"+cardId+\"/likes\",{method:\"PUT\",headers:this._options.headers}).then(function(res){return _this5._getResponseData(res);});}//Метод для снятия лайков:\n},{key:\"deleteLike\",value:function deleteLike(cardId){var _this6=this;return fetch(this._options.baseUrl+\"/cards/\"+cardId+\"/likes\",{method:\"DELETE\",headers:this._options.headers}).then(function(res){return _this6._getResponseData(res);});}//Метод для удаления карточки:\n},{key:\"deleteCardMetod\",value:function deleteCardMetod(cardId){var _this7=this;return fetch(this._options.baseUrl+\"/cards/\"+cardId,{method:\"DELETE\",headers:this._options.headers}).then(function(res){return _this7._getResponseData(res);});}//Метод для изменения аватара:\n},{key:\"setEditAvatar\",value:function setEditAvatar(data){var _this8=this;return fetch(this._options.baseUrl+\"/users/me/avatar\",{method:\"PATCH\",headers:this._options.headers,body:JSON.stringify({avatar:data.AvatarInput})}).then(function(res){return _this8._getResponseData(res);});}}]);return Api;}();export{Api as default};var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-60\",headers:{authorization:\"dcf4edee-ca14-49b3-93d1-3710d22ba9f3\",\"Content-Type\":\"application/json\"}});export{api};","map":{"version":3,"names":["Api","options","_classCallCheck","_options","_createClass","key","value","_getResponseData","res","ok","Promise","reject","concat","status","json","getUserInfo","_this","fetch","baseUrl","headers","then","getInitialCards","_this2","setEditUserInfo","data","_this3","method","body","JSON","stringify","name","nameInput","about","jobInput","setNewCard","_this4","link","addLike","cardId","_this5","deleteLike","_this6","deleteCardMetod","_this7","setEditAvatar","_this8","avatar","AvatarInput","default","api","authorization"],"sources":["C:/Users/Мария/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["export default class Api {\r\n  constructor(options) {\r\n    this._options = options;\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  //Метод для информации о пользователе:\r\n  getUserInfo() {\r\n    return fetch(this._options.baseUrl + \"/users/me\", {\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для подключения к массиву карточек:\r\n  getInitialCards() {\r\n    return fetch(this._options.baseUrl + \"/cards\", {\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  // Метод для сохранения данных о пользователе:\r\n  setEditUserInfo(data) {\r\n    return fetch(this._options.baseUrl + \"/users/me\", {\r\n      method: \"PATCH\",\r\n      headers: this._options.headers,\r\n      body: JSON.stringify({\r\n        name: data.nameInput,\r\n        about: data.jobInput,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  // Метод для добавления новой карточки на сервер:\r\n  setNewCard(data) {\r\n    return fetch(this._options.baseUrl + \"/cards\", {\r\n      method: \"POST\",\r\n      headers: this._options.headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для постановки лайков:\r\n  addLike(cardId) {\r\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId + \"/likes\", {\r\n      method: \"PUT\",\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для снятия лайков:\r\n  deleteLike(cardId) {\r\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId + \"/likes\", {\r\n      method: \"DELETE\",\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для удаления карточки:\r\n  deleteCardMetod(cardId) {\r\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId, {\r\n      method: \"DELETE\",\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для изменения аватара:\r\n  setEditAvatar(data) {\r\n    return fetch(this._options.baseUrl + \"/users/me/avatar\", {\r\n      method: \"PATCH\",\r\n      headers: this._options.headers,\r\n      body: JSON.stringify({\r\n        avatar: data.AvatarInput,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-60\",\r\n  headers: {\r\n    authorization: \"dcf4edee-ca14-49b3-93d1-3710d22ba9f3\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport { api };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}