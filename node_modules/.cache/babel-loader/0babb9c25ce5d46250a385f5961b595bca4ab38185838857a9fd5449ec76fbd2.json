{"ast":null,"code":"export default class Api {\n  constructor(options) {\n    this._options = options;\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  //Метод для информации о пользователе:\n  getUserInfo() {\n    return fetch(this._options.baseUrl + \"/users/me\", {\n      headers: this._options.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  //Метод для подключения к массиву карточек:\n  getInitialCards() {\n    return fetch(this._options.baseUrl + \"/cards\", {\n      headers: this._options.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  // Метод для сохранения данных о пользователе:\n  setEditUserInfo(data) {\n    return fetch(this._options.baseUrl + \"/users/me\", {\n      method: \"PATCH\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name: data.nameInput,\n        about: data.jobInput\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  // Метод для добавления новой карточки на сервер:\n  setNewCard(data) {\n    return fetch(this._options.baseUrl + \"/cards\", {\n      method: \"POST\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  //Метод для постановки лайков:\n  addLike(cardId) {\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId + \"/likes\", {\n      method: \"PUT\",\n      headers: this._options.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  //Метод для снятия лайков:\n  deleteLike(cardId) {\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId + \"/likes\", {\n      method: \"DELETE\",\n      headers: this._options.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  //Метод для удаления карточки:\n  deleteCardMetod(cardId) {\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId, {\n      method: \"DELETE\",\n      headers: this._options.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  //Метод для изменения аватара:\n  setEditAvatar(data) {\n    return fetch(this._options.baseUrl + \"/users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._options.headers,\n      body: JSON.stringify({\n        avatar: data.AvatarInput\n      })\n    }).then(res => this._getResponseData(res));\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-60\",\n  headers: {\n    authorization: \"dcf4edee-ca14-49b3-93d1-3710d22ba9f3\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport { api };","map":{"version":3,"names":["Api","constructor","options","_options","_getResponseData","res","ok","Promise","reject","status","json","getUserInfo","fetch","baseUrl","headers","then","getInitialCards","setEditUserInfo","data","method","body","JSON","stringify","name","nameInput","about","jobInput","setNewCard","link","addLike","cardId","deleteLike","deleteCardMetod","setEditAvatar","avatar","AvatarInput","api","authorization"],"sources":["C:/Users/Мария/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["export default class Api {\r\n  \r\n  constructor(options) {\r\n    this._options = options;\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  //Метод для информации о пользователе:\r\n  getUserInfo() {\r\n    return fetch(this._options.baseUrl + \"/users/me\", {\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для подключения к массиву карточек:\r\n  getInitialCards() {\r\n    return fetch(this._options.baseUrl + \"/cards\", {\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  // Метод для сохранения данных о пользователе:\r\n  setEditUserInfo(data) {\r\n    return fetch(this._options.baseUrl + \"/users/me\", {\r\n      method: \"PATCH\",\r\n      headers: this._options.headers,\r\n      body: JSON.stringify({\r\n        name: data.nameInput,\r\n        about: data.jobInput,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  // Метод для добавления новой карточки на сервер:\r\n  setNewCard(data) {\r\n    return fetch(this._options.baseUrl + \"/cards\", {\r\n      method: \"POST\",\r\n      headers: this._options.headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для постановки лайков:\r\n  addLike(cardId) {\r\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId + \"/likes\", {\r\n      method: \"PUT\",\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для снятия лайков:\r\n  deleteLike(cardId) {\r\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId + \"/likes\", {\r\n      method: \"DELETE\",\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для удаления карточки:\r\n  deleteCardMetod(cardId) {\r\n    return fetch(this._options.baseUrl + \"/cards/\" + cardId, {\r\n      method: \"DELETE\",\r\n      headers: this._options.headers,\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n\r\n  //Метод для изменения аватара:\r\n  setEditAvatar(data) {\r\n    return fetch(this._options.baseUrl + \"/users/me/avatar\", {\r\n      method: \"PATCH\",\r\n      headers: this._options.headers,\r\n      body: JSON.stringify({\r\n        avatar: data.AvatarInput,\r\n      }),\r\n    }).then((res) => this._getResponseData(res));\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-60\",\r\n  headers: {\r\n    authorization: \"dcf4edee-ca14-49b3-93d1-3710d22ba9f3\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport { api };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}